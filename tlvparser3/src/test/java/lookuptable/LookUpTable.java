package lookuptable;

import exception.UbiveloxException;

public class LookUpTable
{

    //@formatter:off
    final static byte[]           BYTE_ARRAY = new byte[] {    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
                                                             , -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
                                                             , -1, -1, -1, -1, -1, -1, -1, -1  -1, -1, -1, -1, -1, -1, -1, -1
                                                             , -1,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, -1, -1, -1, -1, -1
                                                             , -1, -1, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1
                                                             , -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
                                                             , -1, -1, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1
                                                             , -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
                                                             , -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
                                                             , -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
                                                             , -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
                                                             , -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
                                                             , -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
                                                             , -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
                                                             , -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
                                                             , -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
    };
//@formatter:on





    public static byte hexMapping(final char val) throws UbiveloxException
    {
        if ( val > BYTE_ARRAY.length )
        {
            throw new UbiveloxException("Incorrect Hexa String Range Overflow");
        }

        if ( BYTE_ARRAY[val] != -1 )
        {
            return BYTE_ARRAY[val];
        }
        else
        {
            throw new UbiveloxException("Incorrect Hexa String Range");
        }
    }
}
